# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
       - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.4 # GitHub Action version
      with:
        project: KB_GHA_Rslvr  # <-- Insert Checkmarx CxSCA Project Name
        sca_api_url: https://api-sca.checkmarx.com
        sca_app_url: https://sca.checkmarx.com
        sca_access_control_url: https://platform.checkmarx.net
        sca_tenant: <SCATenant>  # <-- Insert Checkmarx CxSCA Tenant
        sca_username: ${{ secrets.SCA_USERNAME }} # To be stored in GitHub Secrets.
        sca_password: ${{ secrets.SCA_PASSWORD }} # To be stored in GitHub Secrets.
        break_build: false
        scanners: sca
        bug_tracker: Sarif
        params: --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=${{ github.ref }} --repo-url="<GitHubRepoUrl>" --cx-flow.filterSeverity --cx-flow.filterCategory

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: cx.sarif

	# Run SCA Resolver
	- name: SCA Resolver
        run: "./ScaResolver -s '${{ github.workspace }}' -n ' ${{ github.repository }}' -a ${{ secrets.SCA_TENANT }} -u ${{ secrets.SCA_USERNAME }} -p '${{ secrets.SCA_PASSWORD }}' "
		
